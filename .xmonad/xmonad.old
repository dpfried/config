import XMonad
import XMonad.Config.Gnome
import XMonad.Hooks.DynamicLog
import XMonad.Hooks.ManageDocks
import XMonad.Util.Run(spawnPipe)
import XMonad.Util.EZConfig(additionalKeys)
import XMonad.Layout.NoBorders
import System.IO
import XMonad.Hooks.ManageHelpers
import XMonad.Layout.Grid
import XMonad.Layout.ResizableTile
import XMonad.Layout.StackTile
import XMonad.Hooks.SetWMName

myManageHook = composeAll
    [ className =? "Gimp"      --> doFloat
    , className =? "Vncviewer" --> doFloat
    , title     =? "JavaBoy" --> doFloat
    , title     =? "RISK!" --> doFloat
    , title     =? "room_ground_truther" --> doFloat
    ]

myStartupHook = do
--    spawn "trayer --SetDockType true --SetPartialStrut true"
    spawn "gnome-settings-daemon"
    spawn "nm-applet"
    spawn "gnome-power-manager"
    spawn "~/scripts/2frsc"
    --setWMName "LG3D"


myLayout = avoidStruts $ tiled ||| Grid ||| Full
    where
        tiled = ResizableTall nmaster delta (1/2) []
        nmaster = 1
        delta = 0.03

main = do
    xmproc <- spawnPipe "xmobar"
    xmonad $ defaultConfig
        { terminal = "gnome-terminal"
        ,modMask = mod4Mask
	,manageHook = manageDocks <+> myManageHook -- make sure to include myManageHook definition from above
                        <+> manageHook defaultConfig
        , layoutHook = myLayout -- avoidStruts $ Grid -- ||| MirrorTall ||| Tall --layoutHook defaultConfig
        , startupHook = myStartupHook
        , logHook = dynamicLogWithPP $ xmobarPP
                        { ppOutput = hPutStrLn xmproc
                        , ppTitle = xmobarColor "green" "" . shorten 50
                       }
        } `additionalKeys`
        -- screenshots
        [ ((controlMask, xK_Print), spawn "sleep 0.2; scrot -s")
        , ((0, xK_Print), spawn "scrot")
        -- XF86AudioMute
        , ((0, 0x1008ff12), spawn "amixer -q set Master toggle")
        -- XF86AudioLowerVolume
        , ((0, 0x1008ff11), spawn "amixer set Master 5%-")
        -- XF86AudioRaiseVolumer 
        , ((0, 0x1008ff13), spawn "amixer set Master 5%+")
        -- XF86 Suspend
        , ((0, 0x1008ffa7), spawn "home/dfried/scripts/suspend.sh") 
        -- alternate suspend
        , ((mod4Mask, xK_F4), spawn "/home/dfried/scripts/suspend.sh")
        -- what does this one do? idk
        , ((mod4Mask, xK_m), spawn "/home/dfried/scripts/syslog-notify.sh")
        -- display battery %
        , ((mod4Mask, xK_b), spawn "/home/dfried/scripts/battery.py")
        -- diisplay cpu temp
        , ((mod4Mask, xK_c), spawn "/home/dfried/scripts/thermal.py")
        , ((mod4Mask, xK_F2), spawn "gnome-screensaver-command --lock")
        -- monitor commands
        , ((mod4Mask, xK_F9), spawn "/home/dfried/scripts/single-head.sh")
        , ((mod4Mask, xK_F10), spawn "/home/dfried/scripts/dual-head.sh")
        , ((mod4Mask, xK_F11), spawn "/home/dfried/scripts/lab-head.sh")
        , ((mod4Mask, xK_F12), spawn "/home/dfried/scripts/monitor-only.sh")
        -- swap esc and caps lock for vim use
        , ((mod4Mask, xK_s), spawn "xmodmap /home/dfried/.speedswap")
        -- deprecated
        -- , ((mod4Mask, xK_y), spawn "/home/dfried/scripts/add-modes.sh")
        ]
{-
main = xmonad
    gnomeConfig {
            terminal = "term"
          , layoutHook  = smartBorders (layoutHook gnomeConfig)
    }
-}
